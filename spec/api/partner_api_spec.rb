=begin
#Shared API

#Convictional is the first B2B trade enablement network. This API allows developers to build on our seller and buyer capabilities. This API is unstable, meaning the endpoints could be added, updated or removed without notice. We intend to make backwards incompatible changes in the future, and will make best efforts to notify you in the event of your usage of impacted endpoints. If you plan to build on this API, please contact us for recommendations via support@convictional.com.

The version of the OpenAPI document: v2021-01-01
Contact: support@convictional.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for ConvictionalShared::PartnerApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'PartnerApi' do
  before do
    # run before each test
    @api_instance = ConvictionalShared::PartnerApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PartnerApi' do
    it 'should create an instance of PartnerApi' do
      expect(@api_instance).to be_instance_of(ConvictionalShared::PartnerApi)
    end
  end

  # unit tests for get_partners
  # List partners
  # An endpoint for getting partners.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page The page number of results to return. Note this is a zero-based index.
  # @option opts [Integer] :limit The number of results per page. Max is 250.
  # @option opts [Boolean] :completed Show partners who have completed the onboarding steps.
  # @option opts [Boolean] :show_onboarding_status Provide the getting started status within the partner. If false, partners[0].gettingStarted will be null.
  # @return [Object]
  describe 'get_partners test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for patch_partner_by_id
  # Update partner
  # An endpoint for partially updating partners.
  # @param partner_id ID of the partner
  # @param partner_update 
  # @param [Hash] opts the optional parameters
  # @return [Partner]
  describe 'patch_partner_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_partnership
  # Create partner
  # An endpoint for creating new partners. If you are a seller, please provide an email and price list ID. If you are a buyer, only an email is required.
  # @param partner_create An object containing a partnership
  # @param [Hash] opts the optional parameters
  # @return [Partner]
  describe 'post_partnership test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
